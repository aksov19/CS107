ჩვეულებრივ ტესტებზე გაშვება:
./assn-4-checker ./rss-news-search
memory ტესტებზე გაშვება:
./assn-4-checker ./rss-news-search -m

(დავალების სპეციფიკიდან გამომდინარე მემორი ტესტებზე ეშვება მხოლოდ 32 ბიტიანზე ან თუ ვალგრინდს/ თქვენ პროგრამას დააკონფიგურირებთ ისე რომ თქვენი დავალება გაეშვას ამაზეც გაეშვება)


ზოგადი ინსტრუქცია:
./assn-4-checker <path to rss program> [new_path/to/dir to test file (optional)]  [-v (verbous) optional] [-m  (memory check) optional]


ზოგადი ინფორმაცია: 
ფაილებში მითითებული file:// პრეფიქსით დაწყებული ლინკები მიუთითებს ლოკალურად ფაილურ სისტემაში არსებულ სტატიებს.

>>>>> ტესტირებისთვის : data/test.txt სახით არის სატესტო ფაილი რომლიც მიუთითებს data/test1.txt , data/test2.txt, data/test3.txt ფაილებში არსებულ სატესტო სტატიებს და არსებული სტატიებისთვის უშვებს შესაბამის ტესტებზე.

ასევე:
  სატესტო პროგრამაში გასატესტი პროგრამის არგუმენტი (ფაილი) არის  data/test.txt  default-ად, თუმცა  გადასაცემი პარამეტრით შესაძლებელია მისი ცვლილება. უფრო მარტივად: (თუ სატესტო პროგრამას იმავე ფოლდერში მოვათავსებთ სადაც გასატესტი პროგრამაა და გავუშვებთ (ანუ არაფერს შეცვლით), მაშინ არსებული default პარამეტრი სწორად იმუშავებს)

აქვე: 
აუცილებელია გამოსატანი ფორმატის დაცვა, იგულისხმება მაგ.:
1.) "Iraq fears action 'may escalate'" [search term occurs 26 times] 
 "news.bbc.co.uk/2/hi/middle_east/7046765.stm"
 2.) "Blackwater boss grilled over Iraq" [search term occurs 20 times] 
 "news.bbc.co.uk/2/hi/middle_east/7024370.stm"
პროგრამის რეზულტატის წინ, რაიმე მესიჯის გამოტანა !არ! არის საჭირო (გამომდინარე პირობაში არსებული სხვადასხვაგვარობიდან): მაგალითად როგორებიცაა:
Nice! We found articles that include the word "Paris".
[We'll just list 10, though.]
